{"version":3,"sources":["components/Section/Section.module.scss","components/Filter/Filter.module.scss","App.module.scss","components/ContactList/ContactList.module.scss","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.scss"],"names":["module","exports","Section","children","className","s","section","Form","state","name","number","nameInputId","shortid","generate","tagInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","formContact","this","contactFormItem","type","onChange","pattern","title","required","formButton","Component","ContactList","contacts","onDeleteContact","contactList","map","id","contactItem","contactItemText","onClick","Filter","filterBox","App","filter","addContact","contact","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","visibleContacts","box","ContactForm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80ddb8d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__9OYby\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterBox\":\"Filter_filterBox__2TNEY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"App_box__aD21G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__fFcCD\",\"contactItem\":\"ContactList_contactItem__1uvYp\",\"contactItemText\":\"ContactList_contactItemText__3NYJ-\"};","import s from '../Section/Section.module.scss';\nexport default function Section({ children }) {\n  return <div className={s.section}>{children}</div>;\n}\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport s from './ContactForm.module.scss';\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = shortid.generate();\n  tagInputId = shortid.generate();\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className={s.formContact} onSubmit={this.handleSubmit}>\n        <label className={s.contactFormItem}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <br />\n        <label className={s.contactFormItem}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button className={s.formButton} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import s from './ContactList.module.scss';\n\nexport default function ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.contactItem}>\n          <p className={s.contactItemText}>{name}</p>\n          <p className={s.contactItemText}>{number}</p>\n          <button\n            type=\"button\"\n            className={s.contactItemText}\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React from 'react';\nimport s from './Filter.module.scss';\nconst Filter = ({ value, onChange }) => (\n  <label className={s.filterBox}>\n    Find contacts by name\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Section from './components/Section';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport contacts from './contacts.json';\nimport s from './App.module.scss';\n\nclass App extends Component {\n  state = {\n    contacts: contacts,\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <Section>\n        <div className={s.box}>\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={this.addContact} />\n\n          <h2>Contacts</h2>\n          <Filter value={filter} onChange={this.changeFilter} />\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </div>\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContact\":\"ContactForm_formContact__2SQ1I\",\"contactFormItem\":\"ContactForm_contactFormItem__2KDm5\",\"formButton\":\"ContactForm_formButton__i5lkM\"};"],"sourceRoot":""}